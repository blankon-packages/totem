From 59a31a868256233b48fee9948c68e7218f0aaaa0 Mon Sep 17 00:00:00 2001
From: Tim Lunn <tim@feathertop.org>
Date: Thu, 20 Nov 2014 16:57:20 +1100
Subject: [PATCH 1/2] Fallback to grl-filesystem if tracker is not available.

---
 src/totem-grilo.c |   55 ++++++++++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 53 insertions(+), 2 deletions(-)

--- a/src/totem-grilo.c
+++ b/src/totem-grilo.c
@@ -189,6 +189,20 @@ strv_has_prefix (const char **strv,
 
 	return FALSE;
 }
+static gboolean
+have_tracker (void)
+{
+    GrlSource *source;
+	GrlRegistry *registry;
+	registry = grl_registry_get_default ();
+
+    source = grl_registry_lookup_source (registry, "grl-tracker-source");
+	if (source) {
+        return TRUE;
+	}
+
+    return FALSE;
+}
 
 static gboolean
 source_is_blacklisted (GrlSource *source)
@@ -240,8 +254,24 @@ source_is_search_blacklisted (GrlSource
 }
 
 static gboolean
+source_is_filesystem (GrlSource *source)
+{
+	const char *id;
+	const char const *sources[] = {
+		"grl-filesystem",
+		NULL
+	};
+
+	id = grl_source_get_id (source);
+	g_assert (id);
+
+	return strv_has_prefix (sources, id);
+}
+
+static gboolean
 source_is_recent (GrlSource *source)
 {
+	gboolean result;
 	const char *id;
 	const char const *sources[] = {
 		"grl-tracker-source",
@@ -253,7 +283,10 @@ source_is_recent (GrlSource *source)
 	id = grl_source_get_id (source);
 	g_assert (id);
 
-	return strv_has_prefix (sources, id);
+	result = strv_has_prefix (sources, id);
+	if (!result && !have_tracker())
+		result = source_is_filesystem(source);
+	return result;
 }
 
 static gboolean
@@ -605,6 +638,8 @@ get_source_priority (GrlSource *source)
 		return 100;
 	if (g_str_equal (id, "grl-bookmarks"))
 		return 75;
+	if (g_str_equal (id, "grl-bookmarks"))
+		return 60;
 	if (g_str_equal (id, "grl-tracker-source"))
 		return 50;
 	if (g_str_has_prefix (id, "grl-upnp-") ||
@@ -1419,6 +1454,16 @@ load_grilo_plugins (TotemGrilo *self)
 	}
 	g_strfreev (configs);
 
+	/* configure grl-filesystem with users home dir */
+	if (!self->priv->fs_plugin_configured) {
+		GrlConfig *config;
+
+		config = grl_config_new ("grl-filesystem", NULL);
+		grl_config_set_string (config, "base-uri", g_filename_to_uri(g_get_home_dir(),NULL,NULL));
+		grl_registry_add_config (registry, config, NULL);
+		self->priv->fs_plugin_configured = TRUE;
+	}
+
 	g_signal_connect (registry, "source-added",
 	                  G_CALLBACK (source_added_cb), self);
 	g_signal_connect (registry, "source-removed",
@@ -1428,6 +1473,8 @@ load_grilo_plugins (TotemGrilo *self)
 		g_warning ("Failed to load grilo plugins: %s", error->message);
 		g_error_free (error);
 	}
+
+	have_tracker();
 }
 
 static gboolean
@@ -1903,7 +1950,11 @@ search_mode_changed (GObject          *g
 		/* Try to guess which source should be used for search */
 		model = gd_main_view_get_model (GD_MAIN_VIEW (self->priv->browser));
 		if (model == self->priv->recent_sort_model) {
-			id = "grl-tracker-source";
+			if (have_tracker())
+				id = "grl-tracker-source";
+			else
+				id = "grl-filesystem";
+
 			self->priv->last_page = g_strdup ("recent");
 		} else {
 			GtkTreeIter iter;
